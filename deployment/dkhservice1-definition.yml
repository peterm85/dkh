apiVersion: v1
kind: ConfigMap
metadata:
  name: dkhservice1-config
data:
  showHostname : "true"
  DKHSERVICE2_PATH : "http://dkhservice2-svc:8080"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dkhservice1-dpl
spec:
  replicas: 2
  selector:
    matchLabels:
      app-name: dkhservice1
  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  
  template:
    metadata:
      name: dkhservice1-pod
      labels:
        type: back-end
        app-name: dkhservice1
        language: java
    spec:
      containers:
      - name: dkhservice1
        image: petermichael85/dkhservice1:0.0.4
        #imagePullPolicy: Always
        ports:
        - name: default-port
          containerPort: 8080
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name 
        envFrom:
        - configMapRef:
            name: dkhservice1-config
        
        readinessProbe:
          httpGet:
            path: /live/healthy
            port: default-port
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /live/healthy
            port: default-port
          initialDelaySeconds: 120
          periodSeconds: 5
          failureThreshold: 2
        resources:
          requests:
            cpu: .1
            memory: "256Mi"
          limits:
            cpu: .2
            memory: "500Mi"            
---

apiVersion: v1
kind: Service
metadata:
  name: dkhservice1-svc
spec:
  selector:
    app-name: dkhservice1
  type: NodePort
  ports:
  - targetPort: 8080
    port: 8080
    nodePort: 30008
  

###################################
# kubectl get node -o wide
#
# http://node-ip:30008/hello
# http://172.17.135.44:30008/hello
#